-
  speaker_id: michele-bertoli
  title: setState demystified
  keynote: false
  extract: >
    "Nobody knows how to do anything without Redux anymore. It's ridiculous."
    - <a href="https://twitter.com/mjackson/status/745074910830067712" target="_blank">@mjackson</a><br> <br>
    Let's fix it!
-
  speaker_id: olena-sovyn
  title: On the way to making the React components more reusable
  keynote: false
  extract: >
    One of the main ideas of the react components is their reusability, but when it comes to the real projects we often
    see a lot of the “hard coded” components. Why is this happening? And even more important, how can we change this by
    using the latest tools (like React-storybook project) and understanding of the classical JavaScript design patterns?
-
  speaker_id: javi-velasco
  title: Styling Components for React UI Kits
  keynote: false
  extract: >
    React is a wonderful tool to write reusable components but there is no clear definition on how a good API for
    theming and customization should look like. There are too many approaches when it comes to styling, and
    choosing one of those is a crucial decision, specially for vendor component libraries like
    <a href="http://react-toolbox.com" target="_blank">http://react-toolbox.com/</a>. <br> <br>
    In this talk we will go through some of the most important styling libraries, analyzing what should they
    cover from the point of view of a library of components, and using React Toolbox as study case. We will
    explore how customization and theming can be modeled for UI Kit projects with different tools. Finally,
    we will see a simple technique that allows one to write components that are agnostic from styling, without
    committing to an specific tool. This makes possible to switch between styling strategies over time and
    experiment with them while keeping the same component implementation.
-
  speaker_id: tomasz-lakomy
  title: Introduction to ReactVR - because 2D is not good enough!
  keynote: false
  extract: >
    In this talk we're going to take a look at ReactVR, an experimental library for building VR websites and interactive
    360 experiences with React. Even though it's still in early development, we will take a look of what might be
    possible with future VR browser experiences (live demo included!).

-
  speaker_id: narendra-shetty
  title: Shared Element Transition with React Native
  keynote: false
  extract: >
    I will be talking about how to achieve Shared Element Transition with React Native for both iOS and Android.
    <br />
    Will explain the advantages of having a smooth continuous experience.
    <br />
    And since React Native doesn’t support true shared elements, I will explain how we can achieve this with a clever
    trick of smoke and mirror.

-
  speaker_id: mariano-vazquez
  title: Why you should (not) build a reusable components library for your company
  keynote: false
  extract: >
    Everything starts with a good idea, but it takes a lot of work to make it shine. And when you do it, and people
    start using it, you feel the need to take it to the next level. And the next one, and so on, maintaining at the same
    time what it’s working in production.
    <br />
    During this talk, we will talk about the experience, lessons learnt and good (and bad) ideas of designing a reusable
    components library with React, that led us to redefine the entire UI development process and front-end architecture
    @ MuleSoft.


-
  speaker_id: kristijan-ristovski
  title: React state management in a GraphQL era
  keynote: false
  extract: >
    In this talk, we're going to explore the evolution of making a SPA with React. We're going to start with React's
    built-in setState, how it is complicated to maintain at scale, especially when it comes to sharing state and fetching
    data.
    <br />
    External state management apps like Redux and MobX can definitely help with this problem, especially when the data
    is fetched from a REST endpoint.
    <br />
    We're going to spend most of the time on the main point: Now that we're using GraphQL to take care of data management,
    is an external state management library even needed? Can Apollo coexist with Redux or MobX? What about server-side
    rendering and Next.js? What are the pros and cons of each combination?
    <br />
    We'll find out what's the best way to approach this in 2017.

-
  speaker_id: katarzyna-jastrzebska
  title: Build Your React Application with StyledComponents and FlexBox
  keynote: false
  extract: >
    StyledComponents is a new approach for building presentational components without any css preprocessors and with
    power of javascript. I would like to present example of building application based on styledcomponents with reused
    grid system built on FlexBox.


-
  speaker_id: massimiliano-mantione
  title: If it quacks like React and renders like React, is it React?
  keynote: false
  extract: >
    React took the web development community by storm with its great success. Now there are also several
    "React replacement" libraries, which keep API compatibility but promise to be "better" in several ways
    (generally speed and code size), and some of them have been used in high-profile projects instead of the
    "original" React. And, last but not least, Facebook itself is rewriting the React internals, making the
    fiber-based version 16 a de-facto "API-compatible reimplementation". In this talk we'll see why these different
    implementation exist, how they differ from each other, and which one you should pick for your next project.
